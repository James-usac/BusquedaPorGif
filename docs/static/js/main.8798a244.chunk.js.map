{"version":3,"sources":["Components/AddCategory.js","Components/GifGrid.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","React","useState","inputValue","setInputValue","onSubmit","event","preventDefault","trim","length","prevCategories","console","log","TextField","label","variant","value","onChange","e","target","GifGrid","category","images","setImages","useEffect","getGifs","a","url","encodeURI","fetch","resp","json","data","gifs","map","img","id","title","downsized_medium","src","alt","GifExpertApp","categories","ReactDOM","render","document","getElementById"],"mappings":"4MAIaA,EAAc,SAAC,GAAqB,IAApBC,EAAmB,EAAnBA,cAEzB,EAAoCC,IAAMC,SAAS,IAAnD,mBAAOC,EAAP,KAAmBC,EAAnB,KAeA,OACI,sBAAMC,SAVW,SAACC,GAClBA,EAAMC,iBACHJ,EAAWK,OAAOC,OAAS,IAC1BT,GAAc,SAAAU,GAAc,OAAKP,GAAL,mBAAoBO,OAChDN,EAAc,KAElBO,QAAQC,IAAI,iBAIZ,SACI,cAACC,EAAA,EAAD,CACIC,MAAM,SACNC,QAAQ,WACRC,MAAOb,EACPc,SAAU,SAACC,GAlBnBd,EAkBsCc,EAlBlBC,OAAOH,a,yBCNtBI,EAAU,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,SAItB,EAA4BpB,IAAMC,SAAS,IAA3C,mBAAOoB,EAAP,KAAeC,EAAf,KAEAC,qBAAU,WACNC,EAAQJ,KACT,CAACA,IAEJ,IAAMI,EAAO,uCAAG,WAAOJ,GAAP,uBAAAK,EAAA,6DACNC,EADM,iDAC0CC,UAAUP,GADpD,6BARA,oCAQA,SAEOQ,MAAMF,GAFb,cAENG,EAFM,gBAGWA,EAAKC,OAHhB,uBAGJC,EAHI,EAGJA,KAEFC,EAAOD,EAAKE,KAAI,SAAAC,GAAQ,IAAD,EACzB,MAAO,CACHC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXV,IAAG,UAAEQ,EAAIb,cAAN,aAAE,EAAYgB,iBAAiBX,QAG1ChB,QAAQC,IAAIqB,GACZV,EAAUU,GAbE,kBAcLA,GAdK,4CAAH,sDAiBb,OACI,gCACI,6BAAKZ,IAEDC,EAAOY,KAAI,SAAAC,GAAG,OACV,gCACI,qBAAKI,IAAKJ,EAAIR,IAAKa,IAAKL,EAAIE,QAC5B,uBACA,gCAAQF,EAAIE,UAHNF,EAAIC,WC/BrBK,EAAe,WAExB,MAAoCxC,IAAMC,SAAS,CAAC,cAApD,mBAAOwC,EAAP,KAAmB1C,EAAnB,KAEA,OACI,gCACI,8CACA,cAAC,EAAD,CAAaA,cAAgBA,IAC7B,uBAEI0C,EAAWR,KAAI,SAACb,GAAD,OACP,cAAC,EAAD,CAASA,SAAUA,GAAeA,U,MCR1DsB,IAASC,OACL,cAAC,EAAD,IACFC,SAASC,eAAe,W","file":"static/js/main.8798a244.chunk.js","sourcesContent":["import { TextField } from '@mui/material'\r\nimport React from 'react'\r\nimport PropTypes from 'prop-types'\r\n\r\nexport const AddCategory = ({setCategories}) => {\r\n \r\n    const [inputValue, setInputValue] = React.useState('')\r\n\r\n    const handleChange = (event) => {\r\n        setInputValue(event.target.value)\r\n    }\r\n\r\n    const handleSubmit = (event) => {\r\n        event.preventDefault()\r\n        if(inputValue.trim().length > 2) {\r\n            setCategories(prevCategories => [inputValue, ...prevCategories]);\r\n            setInputValue('')\r\n        }   \r\n        console.log(\"submit Hecho\")\r\n    }\r\n\r\n    return (\r\n        <form onSubmit={handleSubmit}>\r\n            <TextField \r\n                label=\"Buscar\"\r\n                variant=\"outlined\"\r\n                value={inputValue}\r\n                onChange={(e) => handleChange(e)}\r\n            />\r\n        </form>\r\n    )\r\n}\r\n\r\n//para indicar que el dato es requerido\r\nAddCategory.propTypes = {\r\n    setCategories: PropTypes.func.isRequired\r\n}\r\n","\r\nimport React, { useEffect } from 'react'\r\n\r\nexport const GifGrid = ({ category }) => {\r\n\r\n    const api_key = \"CXlwDg9c0PUX5bdLjOUkBPfbZsmWSmAj\";\r\n\r\n    const [images, setImages] = React.useState([]);\r\n\r\n    useEffect(() => {\r\n        getGifs(category);\r\n    }, [category]);\r\n\r\n    const getGifs = async (category) => {\r\n        const url = `https://api.giphy.com/v1/gifs/search?q=${encodeURI(category)}&limit=10&api_key=${api_key}`;\r\n        const resp = await fetch(url);\r\n        const { data } = await resp.json();\r\n\r\n        const gifs = data.map(img => {\r\n            return {\r\n                id: img.id,\r\n                title: img.title,\r\n                url: img.images?.downsized_medium.url\r\n            }\r\n        })\r\n        console.log(gifs);\r\n        setImages(gifs);\r\n        return gifs;\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <h1>{category}</h1>\r\n            {\r\n                images.map(img => (\r\n                    <div key={img.id}>\r\n                        <img src={img.url} alt={img.title} />\r\n                        <br/>\r\n                        <label>{img.title}</label>\r\n                    </div>\r\n                ))\r\n            }\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { AddCategory } from './Components/AddCategory';\r\nimport { GifGrid } from './Components/GifGrid';\r\n\r\nexport const GifExpertApp = () => {\r\n\r\n    const [categories, setCategories] = React.useState(['One Punch']);\r\n\r\n    return (\r\n        <div>\r\n            <h2>GifExpertApp</h2>\r\n            <AddCategory setCategories={ setCategories }></AddCategory>\r\n            <hr />\r\n            {\r\n                categories.map((category) => (\r\n                        <GifGrid category={category} key={category}></GifGrid>               \r\n                ))\r\n            }\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { GifExpertApp } from './GifExpertApp';\n\nimport './index.css';\n\n\nReactDOM.render(\n    <GifExpertApp />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}