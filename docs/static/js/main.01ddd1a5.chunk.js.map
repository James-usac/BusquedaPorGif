{"version":3,"sources":["Components/GifGrid.js","Components/MenuFind.js","GifExpertApp.js","index.js"],"names":["GifGrid","category","React","useState","images","setImages","open","setOpen","selectedImg","setSelectedImg","selecttitle","setSelecttitle","useEffect","getGifs","a","url","encodeURI","fetch","resp","json","data","gifs","map","img","id","title","downsized_medium","console","log","ImageList","sx","maxWidth","cols","rowHeight","ImageListItem","className","onClick","handleOpen","src","alt","Modal","onClose","Box","position","top","left","transform","width","bgcolor","border","boxShadow","backgroundColor","pt","px","pb","height","Search","styled","theme","borderRadius","shape","alpha","palette","common","white","marginLeft","breakpoints","up","spacing","SearchIconWrapper","padding","pointerEvents","display","alignItems","justifyContent","StyledInputBase","InputBase","color","paddingLeft","transition","transitions","create","MenuFind","setCategories","inputValue","setInputValue","flexGrow","AppBar","Toolbar","IconButton","size","edge","mr","Typography","variant","noWrap","component","xs","sm","onSubmit","event","preventDefault","trim","length","prevCategories","placeholder","inputProps","value","onChange","e","target","GifExpertApp","categories","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.01ddd1a5.chunk.js","sourcesContent":["\r\nimport { ImageList, ImageListItem, Modal } from '@mui/material';\r\nimport { Box } from '@mui/system';\r\nimport React, { useEffect } from 'react'\r\n\r\nexport const GifGrid = ({ category }) => {\r\n\r\n    const api_key = \"CXlwDg9c0PUX5bdLjOUkBPfbZsmWSmAj\";\r\n\r\n    const [images, setImages] = React.useState([]);\r\n\r\n    const [open, setOpen] = React.useState(false);\r\n\r\n    const [selectedImg, setSelectedImg] = React.useState(null);\r\n\r\n    const [selecttitle, setSelecttitle] = React.useState('');\r\n\r\n    const handleOpen = (img, title) => {\r\n        setSelectedImg(img);\r\n        setSelecttitle(title);\r\n        setOpen(true);\r\n    };\r\n    const handleClose = () => {\r\n        setOpen(false);\r\n    };\r\n\r\n    const style = {\r\n        position: 'absolute',\r\n        top: '50%',\r\n        left: '50%',\r\n        transform: 'translate(-50%, -50%)',\r\n        width: 400,\r\n        bgcolor: 'background.paper',\r\n        border: '2px solid #000',\r\n        boxShadow: 24,\r\n        backgroundColor: 'white',\r\n        pt: 2,\r\n        px: 4,\r\n        pb: 3,\r\n    };\r\n\r\n    useEffect(() => {\r\n        getGifs(category);\r\n    }, [category]);\r\n\r\n    const getGifs = async (category) => {\r\n        const url = `https://api.giphy.com/v1/gifs/search?q=${encodeURI(category)}&limit=10&api_key=${api_key}`;\r\n        const resp = await fetch(url);\r\n        const { data } = await resp.json();\r\n\r\n        const gifs = data.map(img => {\r\n            return {\r\n                id: img.id,\r\n                title: img.title,\r\n                url: img.images?.downsized_medium.url\r\n            }\r\n        })\r\n        console.log(gifs);\r\n        setImages(gifs);\r\n        return gifs;\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <h1>{category}</h1>\r\n            <ImageList sx={{ maxWidth: 500 }} cols={3} rowHeight={164}>\r\n                {\r\n                    images.map(img => (\r\n                        <ImageListItem className=\"zoomImage\" key={img.id}>\r\n                            <img \r\n                                className=\"zoomImage\" \r\n                                onClick={() => handleOpen(img.url, img.title)}\r\n                                src={img.url} alt={img.title} />\r\n                        </ImageListItem>\r\n                    ))\r\n                }\r\n            </ImageList>\r\n            <Modal\r\n                open={open}\r\n                onClose={handleClose}\r\n                aria-labelledby=\"parent-modal-title\"\r\n                aria-describedby=\"parent-modal-description\"\r\n            >\r\n                <Box sx={{ ...style, width: 400 }}>\r\n                    <h2 id=\"parent-modal-title\">{selecttitle}</h2>\r\n                    <img \r\n                        src={selectedImg} \r\n                        alt=\"gif\"\r\n                        width=\"400\"\r\n                        height=\"200\" \r\n                    />\r\n                </Box>\r\n            </Modal>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { styled, alpha } from '@mui/material/styles';\r\nimport AppBar from '@mui/material/AppBar';\r\nimport Box from '@mui/material/Box';\r\nimport Toolbar from '@mui/material/Toolbar';\r\nimport IconButton from '@mui/material/IconButton';\r\nimport Typography from '@mui/material/Typography';\r\nimport InputBase from '@mui/material/InputBase';\r\nimport MenuIcon from '@mui/icons-material/Menu';\r\nimport SearchIcon from '@mui/icons-material/Search';\r\n\r\nconst Search = styled('div')(({ theme }) => ({\r\n  position: 'relative',\r\n  borderRadius: theme.shape.borderRadius,\r\n  backgroundColor: alpha(theme.palette.common.white, 0.15),\r\n  '&:hover': {\r\n    backgroundColor: alpha(theme.palette.common.white, 0.25),\r\n  },\r\n  marginLeft: 0,\r\n  width: '100%',\r\n  [theme.breakpoints.up('sm')]: {\r\n    marginLeft: theme.spacing(1),\r\n    width: 'auto',\r\n  },\r\n}));\r\n\r\nconst SearchIconWrapper = styled('div')(({ theme }) => ({\r\n  padding: theme.spacing(0, 2),\r\n  height: '100%',\r\n  position: 'absolute',\r\n  pointerEvents: 'none',\r\n  display: 'flex',\r\n  alignItems: 'center',\r\n  justifyContent: 'center',\r\n}));\r\n\r\nconst StyledInputBase = styled(InputBase)(({ theme }) => ({\r\n  color: 'inherit',\r\n  '& .MuiInputBase-input': {\r\n    padding: theme.spacing(1, 1, 1, 0),\r\n    // vertical padding + font size from searchIcon\r\n    paddingLeft: `calc(1em + ${theme.spacing(4)})`,\r\n    transition: theme.transitions.create('width'),\r\n    width: '100%',\r\n    [theme.breakpoints.up('sm')]: {\r\n      width: '12ch',\r\n      '&:focus': {\r\n        width: '20ch',\r\n      },\r\n    },\r\n  },\r\n}));\r\n\r\nexport const MenuFind = ({setCategories}) => {\r\n    const [inputValue, setInputValue] = React.useState(''); \r\n\r\n    const handleChange = (event) => {\r\n      setInputValue(event.target.value)\r\n    }\r\n\r\n    const handleSubmit = (event) => {\r\n      event.preventDefault()\r\n      if(inputValue.trim().length > 2) {\r\n          setCategories(prevCategories => [inputValue, ...prevCategories]);\r\n          setInputValue('')\r\n      }   \r\n      console.log(\"submit Hecho\")\r\n  }\r\n\r\n    return (\r\n     <Box sx={{ flexGrow: 1 }}>\r\n      <AppBar position=\"static\">\r\n        <Toolbar>\r\n          <IconButton\r\n            size=\"large\"\r\n            edge=\"start\"\r\n            color=\"inherit\"\r\n            aria-label=\"open drawer\"\r\n            sx={{ mr: 2 }}\r\n          >\r\n            <MenuIcon />\r\n          </IconButton>\r\n          <Typography\r\n            variant=\"h6\"\r\n            noWrap\r\n            component=\"div\"\r\n            sx={{ flexGrow: 1, display: { xs: 'none', sm: 'block' } }}\r\n          >\r\n            GIFS\r\n          </Typography>\r\n          <Search>\r\n            <SearchIconWrapper>\r\n              <SearchIcon />\r\n            </SearchIconWrapper>\r\n            <form onSubmit={handleSubmit}>\r\n            <StyledInputBase\r\n              placeholder=\"Search…\"\r\n              inputProps={{ 'aria-label': 'search' }}\r\n              value={inputValue}\r\n              onChange={(e) => handleChange(e)}\r\n            />\r\n            </form>\r\n          </Search>\r\n        </Toolbar>\r\n      </AppBar>\r\n    </Box>\r\n    );\r\n}\r\n","import React from 'react'\r\nimport { GifGrid } from './Components/GifGrid';\r\nimport { MenuFind } from './Components/MenuFind';\r\n\r\nexport const GifExpertApp = () => {\r\n\r\n    const [categories, setCategories] = React.useState(['One Punch']);\r\n\r\n    return (\r\n        <div>\r\n            <MenuFind setCategories={ setCategories }></MenuFind>\r\n            <div className=\"center_body\">\r\n            {\r\n                categories.map((category) => (\r\n                        <GifGrid category={category} key={category}></GifGrid>               \r\n                ))\r\n            }\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { GifExpertApp } from './GifExpertApp';\n\nimport './index.css';\n\n\nReactDOM.render(\n    <GifExpertApp />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}